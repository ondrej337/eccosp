---
# Source: ecco-sp/charts/eccosp-artemis/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: eccosp-eccosp-artemis-artemis-eptb1-cm
  labels:
    backup.component.name: artemis
data:
  artemis.profile: |-
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.

    ARTEMIS_HOME='/usr/share/eccosp-artemis'
    ARTEMIS_INSTANCE='/opt/eccosp-artemis'
    ARTEMIS_DATA_DIR='/opt/eccosp-artemis/data'
    ARTEMIS_ETC_DIR='/opt/eccosp-artemis/etc'
    ARTEMIS_OOME_DUMP='/opt/eccosp-artemis/log/oom_dump.hprof'

    # The logging config will need an URI
    # this will be encoded in case you use spaces or special characters
    # on your directory structure
    ARTEMIS_INSTANCE_URI='file:/opt/eccosp-artemis/'
    ARTEMIS_INSTANCE_ETC_URI='file:/opt/eccosp-artemis/etc/'

    # Cluster Properties: Used to pass arguments to ActiveMQ Artemis which can be referenced in broker.xml
    #ARTEMIS_CLUSTER_PROPS="-Dactivemq.remoting.default.port=61617 -Dactivemq.remoting.amqp.port=5673 -Dactivemq.remoting.stomp.port=61614 -Dactivemq.remoting.hornetq.port=5446"

    # Hawtio Properties
    # HAWTIO_ROLE define the user role or roles required to be able to login to the console. Multiple roles to allow can
    # be separated by a comma. Set to '*' or an empty value to disable role checking when Hawtio authenticates a user.
    HAWTIO_ROLE='amq'

    # Java Opts
    if [ -z "$JAVA_ARGS" ]; then
        JAVA_ARGS="-XX:AutoBoxCacheMax=20000 -XX:+PrintClassHistogram -XX:+UseG1GC -XX:+UseStringDeduplication -Xms128M -Xmx4G -Dhawtio.disableProxy=true -Dhawtio.realm=activemq -Dhawtio.offline=true -Dhawtio.rolePrincipalClasses=org.apache.activemq.artemis.spi.core.security.jaas.RolePrincipal -Dhawtio.http.strictTransportSecurity=max-age=31536000;includeSubDomains;preload -Djolokia.policyLocation=${ARTEMIS_INSTANCE_ETC_URI}jolokia-access.xml -Dlog4j2.disableJmx=true "
    fi

    # Uncomment to enable logging for Safepoint JVM pauses
    #
    # In addition to the traditional GC logs you could enable some JVM flags to know any meaningful and "hidden" pause
    # that could affect the latencies of the services delivered by the broker, including those that are not reported by
    # the classic GC logs and dependent by JVM background work (eg method deoptimizations, lock unbiasing, JNI, counted
    # loops and obviously GC activity).
    #
    # Replace "all_pauses.log" with the file name you want to log to.
    # JAVA_ARGS="$JAVA_ARGS -XX:+PrintSafepointStatistics -XX:PrintSafepointStatisticsCount=1 -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -XX:+LogVMOutput -XX:LogFile=all_pauses.log"

    # Uncomment to enable the dumping of the Java heap when a java.lang.OutOfMemoryError exception is thrown
    # JAVA_ARGS="$JAVA_ARGS -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${ARTEMIS_OOME_DUMP}"

    # Only enable debug options for the 'run' command
    if [ "$1" = "run" ]; then :
        # Uncomment to enable remote debugging
        # DEBUG_ARGS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"

        # Uncomment for async profiler
        # DEBUG_ARGS="-XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints"
    fi
  broker.xml: |-
    <?xml version='1.0'?>
    <!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
    -->

    <configuration xmlns="urn:activemq"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:xi="http://www.w3.org/2001/XInclude"
                   xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

       <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq:core ">

          <name>ECCo SP Artemis Internal Broker with SSL-JKS-artemis-eptb1</name>

          <persistence-enabled>true</persistence-enabled>

          <!-- It is recommended to keep this value as 1, maximizing the number of records stored about redeliveries.
               However if you must preserve state of individual redeliveries, you may increase this value or set it to -1 (infinite). -->
          <max-redelivery-records>1</max-redelivery-records>

          <!-- this could be ASYNCIO, MAPPED, NIO-->
          <journal-type>ASYNCIO</journal-type>

          <!-- HA - For HA setup these directories need to point to the same storage between all the nodes -->
          <paging-directory>data/paging</paging-directory>
          <bindings-directory>data/bindings</bindings-directory>
          <journal-directory>data/journal</journal-directory>
          <large-messages-directory>data/large-messages</large-messages-directory>

          <journal-datasync>true</journal-datasync>
          <journal-min-files>2</journal-min-files>
          <journal-pool-files>10</journal-pool-files>
          <journal-device-block-size>4096</journal-device-block-size>
          <journal-file-size>10M</journal-file-size>

          <!--
           This value was determined through a calculation.
           Your system could perform 50 writes per millisecond
           on the current journal configuration.
           That translates as a sync write every 20000 nanoseconds.

           Note: If you specify 0 the system will perform writes directly to the disk.
                 We recommend this to be 0 if you are using journalType=MAPPED and journal-datasync=false.
          -->
          <journal-buffer-timeout>20000</journal-buffer-timeout>

          <!-- When using ASYNCIO, this will determine the writing queue depth for libaio.-->
          <journal-max-io>4096</journal-max-io>

          <!-- how often we are looking for how many bytes are being used on the disk in ms -->
          <disk-scan-period>5000</disk-scan-period>

          <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
               that won't support flow control. -->
          <max-disk-usage>90</max-disk-usage>

          <!-- should the broker detect dead locks and other issues -->
          <critical-analyzer>true</critical-analyzer>
          <critical-analyzer-timeout>120000</critical-analyzer-timeout>
          <critical-analyzer-check-period>60000</critical-analyzer-check-period>
          <critical-analyzer-policy>HALT</critical-analyzer-policy>

          <page-sync-timeout>84000</page-sync-timeout>

          <!-- the system will enter into page mode once you hit this limit. This is an estimate in bytes of how much the messages are using in memory
          The system will use half of the available memory (-Xmx) by default for the global-max-size.
          You may specify a different value here if you need to customize it to your needs.-->
          <global-max-size>800M</global-max-size>

          <!-- the maximum number of messages accepted before entering full address mode.
               if global-max-size is specified the full address mode will be specified by whatever hits it first. -->
          <global-max-messages>-1</global-max-messages>

          <acceptors>
             <!-- AMQPS Acceptor -->
             <acceptor name="amqps-broker">
                tcp://0.0.0.0:5672?sslEnabled=true;needClientAuth=false;keyStorePath=/opt/eccosp-artemis/etc/keystore.jks;keyStorePassword=password;trustStorePath=/opt/eccosp-artemis/etc/keystore.jks;trustStorePassword=password;protocols=AMQP;enabledProtocols=TLSv1.3;transport.enabledCipherSuites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256
             </acceptor>
          </acceptors>

          <security-settings>
             <security-setting match="#">
                <permission type="createNonDurableQueue" roles="amq"/>
                <permission type="deleteNonDurableQueue" roles="amq"/>
                <permission type="createDurableQueue" roles="amq"/>
                <permission type="deleteDurableQueue" roles="amq"/>
                <permission type="createAddress" roles="amq"/>
                <permission type="deleteAddress" roles="amq"/>
                <permission type="consume" roles="amq"/>
                <permission type="browse" roles="amq"/>
                <permission type="send" roles="amq"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="amq"/>
             </security-setting>
          </security-settings>

          <address-settings>
             <!--default for catch all-->
             <address-setting match="#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- if max-size-bytes and max-size-messages were both enabled, the system will enter into paging
                     based on the first attribute to hits the maximum value -->
                <max-size-bytes>100M</max-size-bytes>

                <!-- limit for the address in messages, -1 means unlimited -->
                <max-size-messages>-1</max-size-messages>

                <!-- the size of each file on paging. Notice we keep files in memory while they are in use.
                     Lower this setting if you have too many queues in memory. -->
                <page-size-bytes>10M</page-size-bytes>

                <!-- limit how much memory is read from paging into the Queue. -->
                <max-read-page-bytes>20M</max-read-page-bytes>

                <message-counter-history-day-limit>-1</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-delete-queues>false</auto-delete-queues>
                <auto-delete-addresses>false</auto-delete-addresses>
             </address-setting>
          </address-settings>
          <addresses>
             <address name="DLQ">
                <anycast>
                   <queue name="DLQ" />
                </anycast>
             </address>
             <address name="ExpiryQueue">
                <anycast>
                   <queue name="ExpiryQueue" />
                </anycast>
             </address>
          </addresses>

          <broker-plugins>
            <broker-plugin class-name="eu.entsoe.ecp.artemis.plugin.logging.EccospAuditLoggerPlugin">
                <property key="ecpComponentCode" value="artemis-eptb1" />
                <property key="ecpComponentType" value="ECCo SP Artemis Internal Broker" />
         </broker-plugin>
          </broker-plugins>

       </core>
    </configuration>

  broker-master.xml: |-
    <?xml version='1.0'?>
    <!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
    -->

    <configuration xmlns="urn:activemq"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:xi="http://www.w3.org/2001/XInclude"
                   xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

       <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq:core ">

          <name>ECCo SP Artemis Internal Broker with SSL-JKS-artemis-eptb1</name>

          <persistence-enabled>true</persistence-enabled>

          <!-- It is recommended to keep this value as 1, maximizing the number of records stored about redeliveries.
               However if you must preserve state of individual redeliveries, you may increase this value or set it to -1 (infinite). -->
          <max-redelivery-records>1</max-redelivery-records>

          <!-- this could be ASYNCIO, MAPPED, NIO-->
          <journal-type>ASYNCIO</journal-type>

          <!-- HA - For HA setup these directories need to point to the same storage between all the nodes -->
          <paging-directory>data/paging</paging-directory>
          <bindings-directory>data/bindings</bindings-directory>
          <journal-directory>data/journal</journal-directory>
          <large-messages-directory>data/large-messages</large-messages-directory>

          <journal-datasync>true</journal-datasync>
          <journal-min-files>2</journal-min-files>
          <journal-pool-files>10</journal-pool-files>
          <journal-device-block-size>4096</journal-device-block-size>
          <journal-file-size>10M</journal-file-size>

          <!--
           This value was determined through a calculation.
           Your system could perform 50 writes per millisecond
           on the current journal configuration.
           That translates as a sync write every 20000 nanoseconds.

           Note: If you specify 0 the system will perform writes directly to the disk.
                 We recommend this to be 0 if you are using journalType=MAPPED and journal-datasync=false.
          -->
          <journal-buffer-timeout>20000</journal-buffer-timeout>

          <!-- When using ASYNCIO, this will determine the writing queue depth for libaio.-->
          <journal-max-io>4096</journal-max-io>

          <!-- HA Connectors used to be announced through cluster connections and notifications -->
          <connectors>
            <connector name="MASTER">tcp://MASTER.eccosp-eccosp-artemis-artemis-eptb1-headless-svc.eccosp.svc.cluster.local:61616</connector>
            <connector name="SLAVE1">tcp://SLAVE1.eccosp-eccosp-artemis-artemis-eptb1-headless-svc.eccosp.svc.cluster.local:61616</connector>
            <connector name="SLAVE2">tcp://SLAVE2.eccosp-eccosp-artemis-artemis-eptb1-headless-svc.eccosp.svc.cluster.local:61616</connector>
          </connectors>

          <!-- how often we are looking for how many bytes are being used on the disk in ms -->
          <disk-scan-period>5000</disk-scan-period>

          <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
               that won't support flow control. -->
          <max-disk-usage>90</max-disk-usage>

          <!-- should the broker detect dead locks and other issues -->
          <critical-analyzer>true</critical-analyzer>
          <critical-analyzer-timeout>120000</critical-analyzer-timeout>
          <critical-analyzer-check-period>60000</critical-analyzer-check-period>
          <critical-analyzer-policy>HALT</critical-analyzer-policy>

          <page-sync-timeout>84000</page-sync-timeout>

          <!-- the system will enter into page mode once you hit this limit. This is an estimate in bytes of how much the messages are using in memory
          The system will use half of the available memory (-Xmx) by default for the global-max-size.
          You may specify a different value here if you need to customize it to your needs.-->
          <global-max-size>800M</global-max-size>

          <!-- the maximum number of messages accepted before entering full address mode.
               if global-max-size is specified the full address mode will be specified by whatever hits it first. -->
          <global-max-messages>-1</global-max-messages>

          <acceptors>
             <!-- AMQPS Acceptor -->
             <acceptor name="amqps-broker">
                tcp://0.0.0.0:5672?sslEnabled=true;needClientAuth=false;keyStorePath=/opt/eccosp-artemis/etc/keystore.jks;keyStorePassword=password;trustStorePath=/opt/eccosp-artemis/etc/keystore.jks;trustStorePassword=password;protocols=AMQP;enabledProtocols=TLSv1.3;transport.enabledCipherSuites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256
             </acceptor>
             <!-- HA - Acceptor for the cluster communication in HA setup -->
             <acceptor name="artemis">tcp://0.0.0.0:61616?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE;useEpoll=true</acceptor>
          </acceptors>
          <!-- HA - Cluster connection and policy settings -->
                <cluster-user>broker-ha</cluster-user>
                <cluster-password>Uu:dz9bkmw+45?TqMd?f</cluster-password>

                <cluster-connections>
                    <cluster-connection name="ha-cluster">
                        <connector-ref>MASTER</connector-ref>
                        <static-connectors>
                            <connector-ref>SLAVE1</connector-ref>
                            <connector-ref>SLAVE2</connector-ref>
                        </static-connectors>
                    </cluster-connection>
                </cluster-connections>

                <ha-policy>
                   <shared-store>
                        <master>
                            <failover-on-shutdown>true</failover-on-shutdown>
                        </master>
                    </shared-store>
                </ha-policy>
          <security-settings>
             <security-setting match="#">
                <permission type="createNonDurableQueue" roles="amq"/>
                <permission type="deleteNonDurableQueue" roles="amq"/>
                <permission type="createDurableQueue" roles="amq"/>
                <permission type="deleteDurableQueue" roles="amq"/>
                <permission type="createAddress" roles="amq"/>
                <permission type="deleteAddress" roles="amq"/>
                <permission type="consume" roles="amq"/>
                <permission type="browse" roles="amq"/>
                <permission type="send" roles="amq"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="amq"/>
             </security-setting>
          </security-settings>

          <address-settings>
             <!--default for catch all-->
             <address-setting match="#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- if max-size-bytes and max-size-messages were both enabled, the system will enter into paging
                     based on the first attribute to hits the maximum value -->
                <max-size-bytes>100M</max-size-bytes>

                <!-- limit for the address in messages, -1 means unlimited -->
                <max-size-messages>-1</max-size-messages>

                <!-- the size of each file on paging. Notice we keep files in memory while they are in use.
                     Lower this setting if you have too many queues in memory. -->
                <page-size-bytes>10M</page-size-bytes>

                <!-- limit how much memory is read from paging into the Queue. -->
                <max-read-page-bytes>20M</max-read-page-bytes>

                <message-counter-history-day-limit>-1</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-delete-queues>false</auto-delete-queues>
                <auto-delete-addresses>false</auto-delete-addresses>
             </address-setting>
          </address-settings>
          <addresses>
             <address name="DLQ">
                <anycast>
                   <queue name="DLQ" />
                </anycast>
             </address>
             <address name="ExpiryQueue">
                <anycast>
                   <queue name="ExpiryQueue" />
                </anycast>
             </address>
          </addresses>

          <broker-plugins>
            <broker-plugin class-name="eu.entsoe.ecp.artemis.plugin.logging.EccospAuditLoggerPlugin">
                <property key="ecpComponentCode" value="artemis-eptb1" />
                <property key="ecpComponentType" value="ECCo SP Artemis Internal Broker" />
         </broker-plugin>
          </broker-plugins>

       </core>
    </configuration>

  broker-slave.xml: |-
    <?xml version='1.0'?>
    <!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
    -->

    <configuration xmlns="urn:activemq"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:xi="http://www.w3.org/2001/XInclude"
                   xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

       <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq:core ">

          <name>ECCo SP Artemis Internal Broker with SSL-JKS-artemis-eptb1</name>

          <persistence-enabled>true</persistence-enabled>

          <!-- It is recommended to keep this value as 1, maximizing the number of records stored about redeliveries.
               However if you must preserve state of individual redeliveries, you may increase this value or set it to -1 (infinite). -->
          <max-redelivery-records>1</max-redelivery-records>

          <!-- this could be ASYNCIO, MAPPED, NIO-->
          <journal-type>ASYNCIO</journal-type>

          <!-- HA - For HA setup these directories need to point to the same storage between all the nodes -->
          <paging-directory>data/paging</paging-directory>
          <bindings-directory>data/bindings</bindings-directory>
          <journal-directory>data/journal</journal-directory>
          <large-messages-directory>data/large-messages</large-messages-directory>

          <journal-datasync>true</journal-datasync>
          <journal-min-files>2</journal-min-files>
          <journal-pool-files>10</journal-pool-files>
          <journal-device-block-size>4096</journal-device-block-size>
          <journal-file-size>10M</journal-file-size>

          <!--
           This value was determined through a calculation.
           Your system could perform 50 writes per millisecond
           on the current journal configuration.
           That translates as a sync write every 20000 nanoseconds.

           Note: If you specify 0 the system will perform writes directly to the disk.
                 We recommend this to be 0 if you are using journalType=MAPPED and journal-datasync=false.
          -->
          <journal-buffer-timeout>20000</journal-buffer-timeout>

          <!-- When using ASYNCIO, this will determine the writing queue depth for libaio.-->
          <journal-max-io>4096</journal-max-io>
          <!-- HA Connectors used to be announced through cluster connections and notifications -->
          <connectors>
            <connector name="MASTER">tcp://MASTER.eccosp-eccosp-artemis-artemis-eptb1-headless-svc.eccosp.svc.cluster.local:61616</connector>
            <connector name="SLAVE1">tcp://SLAVE1.eccosp-eccosp-artemis-artemis-eptb1-headless-svc.eccosp.svc.cluster.local:61616</connector>
            <connector name="SLAVE2">tcp://SLAVE2.eccosp-eccosp-artemis-artemis-eptb1-headless-svc.eccosp.svc.cluster.local:61616</connector>
          </connectors>

          <!-- how often we are looking for how many bytes are being used on the disk in ms -->
          <disk-scan-period>5000</disk-scan-period>

          <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
               that won't support flow control. -->
          <max-disk-usage>90</max-disk-usage>

          <!-- should the broker detect dead locks and other issues -->
          <critical-analyzer>true</critical-analyzer>
          <critical-analyzer-timeout>120000</critical-analyzer-timeout>
          <critical-analyzer-check-period>60000</critical-analyzer-check-period>
          <critical-analyzer-policy>HALT</critical-analyzer-policy>

          <page-sync-timeout>84000</page-sync-timeout>

          <!-- the system will enter into page mode once you hit this limit. This is an estimate in bytes of how much the messages are using in memory
          The system will use half of the available memory (-Xmx) by default for the global-max-size.
          You may specify a different value here if you need to customize it to your needs.-->
          <global-max-size>800M</global-max-size>

          <!-- the maximum number of messages accepted before entering full address mode.
               if global-max-size is specified the full address mode will be specified by whatever hits it first. -->
          <global-max-messages>-1</global-max-messages>

          <acceptors>
             <!-- AMQPS Acceptor -->
             <acceptor name="amqps-broker">
                tcp://0.0.0.0:5672?sslEnabled=true;needClientAuth=false;keyStorePath=/opt/eccosp-artemis/etc/keystore.jks;keyStorePassword=password;trustStorePath=/opt/eccosp-artemis/etc/keystore.jks;trustStorePassword=password;protocols=AMQP;enabledProtocols=TLSv1.3;transport.enabledCipherSuites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256
             </acceptor>
             <!-- HA - Acceptor for the cluster communication in HA setup -->
             <acceptor name="artemis">tcp://0.0.0.0:61616?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE;useEpoll=true</acceptor>
          </acceptors>
          <!-- HA - Cluster connection and policy settings -->
                <cluster-user>broker-ha</cluster-user>
                <cluster-password>Uu:dz9bkmw+45?TqMd?f</cluster-password>
                <cluster-connections>
                  <cluster-connection name="ha-cluster">
                    <connector-ref>SLAVE-REF</connector-ref>
                      <static-connectors>
                        <connector-ref>MASTER</connector-ref>
                      </static-connectors>
                  </cluster-connection>
                </cluster-connections>
                <ha-policy>
                  <shared-store>
                    <slave>
                      <failover-on-shutdown>true</failover-on-shutdown>
                      <allow-failback>true</allow-failback>
                    </slave>
                  </shared-store>
                </ha-policy>

          <security-settings>
             <security-setting match="#">
                <permission type="createNonDurableQueue" roles="amq"/>
                <permission type="deleteNonDurableQueue" roles="amq"/>
                <permission type="createDurableQueue" roles="amq"/>
                <permission type="deleteDurableQueue" roles="amq"/>
                <permission type="createAddress" roles="amq"/>
                <permission type="deleteAddress" roles="amq"/>
                <permission type="consume" roles="amq"/>
                <permission type="browse" roles="amq"/>
                <permission type="send" roles="amq"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="amq"/>
             </security-setting>
          </security-settings>

          <address-settings>
             <!--default for catch all-->
             <address-setting match="#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- if max-size-bytes and max-size-messages were both enabled, the system will enter into paging
                     based on the first attribute to hits the maximum value -->
                <max-size-bytes>100M</max-size-bytes>

                <!-- limit for the address in messages, -1 means unlimited -->
                <max-size-messages>-1</max-size-messages>

                <!-- the size of each file on paging. Notice we keep files in memory while they are in use.
                     Lower this setting if you have too many queues in memory. -->
                <page-size-bytes>10M</page-size-bytes>

                <!-- limit how much memory is read from paging into the Queue. -->
                <max-read-page-bytes>20M</max-read-page-bytes>

                <message-counter-history-day-limit>-1</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-delete-queues>false</auto-delete-queues>
                <auto-delete-addresses>false</auto-delete-addresses>
             </address-setting>
          </address-settings>
          <addresses>
             <address name="DLQ">
                <anycast>
                   <queue name="DLQ" />
                </anycast>
             </address>
             <address name="ExpiryQueue">
                <anycast>
                   <queue name="ExpiryQueue" />
                </anycast>
             </address>
          </addresses>

          <broker-plugins>
            <broker-plugin class-name="eu.entsoe.ecp.artemis.plugin.logging.EccospAuditLoggerPlugin">
                <property key="ecpComponentCode" value="artemis-eptb1" />
                <property key="ecpComponentType" value="ECCo SP Artemis Internal Broker" />
         </broker-plugin>
          </broker-plugins>

       </core>
    </configuration>




  configure-cluster.sh: |
    ## Script designed to finish the broker.xml templates for Master/Slave HA. Replica with hostname ending with 0, will
    ## always be considered a master. Other replicas are marked as slaves. The pod names are loaded to the broker-master.xml
    ## and broker-slave.xml files and used for configuration.
    REPLICA_COUNT=3
    set -e
    cp /tmp/broker-master.xml /tmp/broker-master.xml.tmp
    cp /tmp/broker-slave.xml /tmp/broker-slave.xml.tmp
    echo Starting decision between MASTER/SLAVE nodes for Artemis HA config.
    echo Number of nodes in the Artemis cluster: $REPLICA_COUNT
    POD_NUMBER=$(hostname | sed 's/.*-//')
    if [[ $POD_NUMBER -eq 0 ]] ; then
      echo "This pod has value: $POD_NUMBER in hostname, thus is considered as a Master."
      MASTER_POD_NAME=$(hostname)
      echo "Hostname of Master pod is: $MASTER_POD_NAME".
      echo "Replacing the Master name in the broker-master.xml file."
      sed -i "s/MASTER/$MASTER_POD_NAME/g" /tmp/broker-master.xml.tmp
      echo "Replacing the Slave names in the broker-master.xml file."
      SLAVE_POD_NAME=$(echo $(hostname) | sed 's/.$//')
      for i in $(seq $REPLICA_COUNT)
        do
          sed -i "s/SLAVE$i/$SLAVE_POD_NAME$i/g" /tmp/broker-master.xml.tmp
        done
      echo "Configuration has been finished, copying file: /tmp/broker-master.xml.tmp to the: /opt/eccosp-artemis/etc/broker.xml path."
      cp /tmp/broker-master.xml.tmp /opt/eccosp-artemis/etc/broker.xml
    else
      echo "This pod has value: $POD_NUMBER in hostname, thus is considered as a Slave."
      SLAVE_POD_NAME=$(hostname)
      echo "Hostname of Slave pod is: $SLAVE_POD_NAME".
      echo "Replacing the Slave name in the broker.xml file."
      sed -i "s/SLAVE-REF/$SLAVE_POD_NAME/g" /tmp/broker-slave.xml.tmp
      SLAVE_POD_NAME=$(echo $(hostname) | sed 's/.$//')
      for i in $(seq $REPLICA_COUNT)
        do
          echo $i ,$SLAVE_POD_NAME$i, SLAVE$i
          sed -i "s/SLAVE$i/$SLAVE_POD_NAME$i/g" /tmp/broker-slave.xml.tmp
        done
      echo "Replacing the Master names in the broker.xml file."
      MASTER_POD_NAME=$(echo $(hostname) | sed 's/.$//')0
      sed -i "s/MASTER/$MASTER_POD_NAME/g" /tmp/broker-slave.xml.tmp
      echo "Configuration has been finished, copying file: /tmp/broker-slave.xml.tmp to the: /opt/eccosp-artemis/etc/broker.xml path."
      cp /tmp/broker-slave.xml.tmp /opt/eccosp-artemis/etc/broker.xml
    fi

  artemis-users.properties: |-
    ## ---------------------------------------------------------------------------
    ## Licensed to the Apache Software Foundation (ASF) under one or more
    ## contributor license agreements.  See the NOTICE file distributed with
    ## this work for additional information regarding copyright ownership.
    ## The ASF licenses this file to You under the Apache License, Version 2.0
    ## (the "License"); you may not use this file except in compliance with
    ## the License.  You may obtain a copy of the License at
    ##
    ## http://www.apache.org/licenses/LICENSE-2.0
    ##
    ## Unless required by applicable law or agreed to in writing, software
    ## distributed under the License is distributed on an "AS IS" BASIS,
    ## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ## See the License for the specific language governing permissions and
    ## limitations under the License.
    ## ---------------------------------------------------------------------------
      endpoint=password
      toolbox=password
    

  artemis-roles.properties: |-
    ## ---------------------------------------------------------------------------
    ## Licensed to the Apache Software Foundation (ASF) under one or more
    ## contributor license agreements.  See the NOTICE file distributed with
    ## this work for additional information regarding copyright ownership.
    ## The ASF licenses this file to You under the Apache License, Version 2.0
    ## (the "License"); you may not use this file except in compliance with
    ## the License.  You may obtain a copy of the License at
    ##
    ## http://www.apache.org/licenses/LICENSE-2.0
    ##
    ## Unless required by applicable law or agreed to in writing, software
    ## distributed under the License is distributed on an "AS IS" BASIS,
    ## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ## See the License for the specific language governing permissions and
    ## limitations under the License.
    ## ---------------------------------------------------------------------------
    amq: endpoint,toolbox
    

  bootstrap.xml: |-
    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <!--
      ~ Licensed to the Apache Software Foundation (ASF) under one or more
      ~ contributor license agreements. See the NOTICE file distributed with
      ~ this work for additional information regarding copyright ownership.
      ~ The ASF licenses this file to You under the Apache License, Version 2.0
      ~ (the "License"); you may not use this file except in compliance with
      ~ the License. You may obtain a copy of the License at
      ~
      ~     http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~ Unless required by applicable law or agreed to in writing, software
      ~ distributed under the License is distributed on an "AS IS" BASIS,
      ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~ See the License for the specific language governing permissions and
      ~ limitations under the License.
      -->

    <broker xmlns="http://activemq.apache.org/schema">

        <jaas-security domain="activemq"/>

        <!-- artemis.URI.instance is parsed from artemis.instance by the CLI startup.
             This is to avoid situations where you could have spaces or special characters on this URI -->
        <server configuration="file:/opt/eccosp-artemis/etc/broker.xml" />

        <!-- The web server is only bound to localhost by default -->
        <web path="web" rootRedirectLocation="console">
        <binding name="artemis" uri="https://0.0.0.0:8161" keyStorePath="/opt/eccosp-artemis/etc/keystore.jks" keyStorePassword="password" trustStorePath="/opt/eccosp-artemis/etc/keystore.jks" trustStorePassword="password" sniHostCheck="false">
      
          <app name="branding" url="activemq-branding" war="activemq-branding.war"/>
          <app name="plugin" url="artemis-plugin" war="artemis-plugin.war"/>
          <app name="console" url="console" war="console.war"/>
        </binding>
        </web>

    </broker>

  jolokia-access.xml: |-
    <?xml version="1.0" encoding="utf-8"?>
    <!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
    -->

    <!-- This policy file controls the Jolokia JMX-HTTP bridge security options for the web console.
       see: https://jolokia.org/reference/html/security.html -->
    <restrict>

        <cors>
            <!-- Allow cross-origin access from the origins that match the following pattern ... -->
            <allow-origin>*://*</allow-origin>

            <!-- Options from this point on are auto-generated by Create.java from the Artemis CLI -->
            <!-- Check for the proper origin on the server side, too -->
            <strict-checking/>
        </cors>

    </restrict>

  log4j2.properties: |-
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    # Log4J 2 configuration

    # Monitor config file every X seconds for updates
    monitorInterval = 5

    rootLogger.level = INFO
    rootLogger.appenderRef.console.ref = console
    rootLogger.appenderRef.log_file.ref = log_file

    #ECCoSP logging
    logger.eu_entsoe.name=eu.entsoe
    logger.eu_entsoe.level=INFO

    logger.activemq.name=org.apache.activemq
    logger.activemq.level=INFO

    logger.artemis_server.name=org.apache.activemq.artemis.core.server
    logger.artemis_server.level=INFO

    logger.artemis_journal.name=org.apache.activemq.artemis.journal
    logger.artemis_journal.level=INFO

    logger.artemis_utils.name=org.apache.activemq.artemis.utils
    logger.artemis_utils.level=INFO

    # CriticalAnalyzer: If you have issues with the CriticalAnalyzer, setting this to TRACE would give
    # you extra troubleshooting info, but do not use TRACE regularly as it would incur extra CPU usage.
    logger.critical_analyzer.name=org.apache.activemq.artemis.utils.critical
    logger.critical_analyzer.level=INFO

    #ECCoSP Audit logging
    logger.ecp_audit_logs.name = EcpAuditLog
    logger.ecp_audit_logs.level = ALL
    logger.ecp_audit_logs.appenderRef.audit_log_file.ref = audit_log_file
    logger.ecp_audit_logs.additivity = false

    # Audit loggers: to enable change levels from OFF to INFO
    logger.audit_base.name = org.apache.activemq.audit.base
    logger.audit_base.level = OFF
    logger.audit_base.appenderRef.audit_log_file.ref = audit_log_file
    logger.audit_base.additivity = false

    logger.audit_resource.name = org.apache.activemq.audit.resource
    logger.audit_resource.level = OFF
    logger.audit_resource.appenderRef.audit_log_file.ref = audit_log_file
    logger.audit_resource.additivity = false

    logger.audit_message.name = org.apache.activemq.audit.message
    logger.audit_message.level = OFF
    logger.audit_message.appenderRef.audit_log_file.ref = audit_log_file
    logger.audit_message.additivity = false

    # Jetty logger levels
    logger.jetty.name=org.eclipse.jetty
    logger.jetty.level=WARN

    # web console authenticator too verbose for impatient client
    logger.authentication_filter.name=io.hawt.web.auth.AuthenticationFilter
    logger.authentication_filter.level=ERROR

    # Quorum related logger levels
    logger.curator.name=org.apache.curator
    logger.curator.level=WARN
    logger.zookeeper.name=org.apache.zookeeper
    logger.zookeeper.level=ERROR


    # Console appender
    appender.console.type=Console
    appender.console.name=console
    appender.console.layout.type=PatternLayout
    appender.console.layout.pattern=%d %-5level [%logger] %msg%n

    # Log file appender
    appender.log_file.type = RollingFile
    appender.log_file.name = log_file
    appender.log_file.fileName = ${sys:artemis.instance}/log/artemis.log
    appender.log_file.filePattern = ${sys:artemis.instance}/log/artemis.%d{yyyy-MM-dd}.log.gz
    appender.log_file.layout.type = PatternLayout
    appender.log_file.layout.pattern = %d %-5level [%logger] %msg%n
    appender.log_file.policies.type = Policies
    appender.log_file.policies.size.type = SizeBasedTriggeringPolicy
    appender.log_file.policies.size.size = 10MB
    appender.log_file.strategy.type = DefaultRolloverStrategy
    appender.log_file.strategy.max = 10

    # Audit log file appender
    appender.audit_log_file.type = RollingFile
    appender.audit_log_file.name = audit_log_file
    appender.audit_log_file.fileName = ${sys:artemis.instance}/log/audit.log
    appender.audit_log_file.filePattern = ${sys:artemis.instance}/log/audit.%d{yyyy-MM-dd}.log.gz
    appender.audit_log_file.layout.type = PatternLayout
    appender.audit_log_file.layout.pattern = %d [AUDIT](%t) %msg%n
    appender.audit_log_file.policies.type = Policies
    appender.audit_log_file.policies.size.type = SizeBasedTriggeringPolicy
    appender.audit_log_file.policies.size.size = 10MB
    appender.audit_log_file.strategy.type = DefaultRolloverStrategy
    appender.audit_log_file.strategy.max = 10
---
# Source: ecco-sp/charts/ecp-endpoint/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: eccosp-ecp-endpoint-ep1-cm
  labels:
    backup.component.name: artemis
data:
  ecp.properties: |-
    # Defines persistent strategy for ECP
    # Available options:
    #  ecp-ha       high availability mode with external db
    #  ecp-nonha    for persistent store inside dataDirectory
    spring.profiles.active=ecp-ha
    ecp.description=ECP Endpoint

    # Directory for persistent data
    dataDirectory=/var/lib/ecp-endpoint
    ecp.content.storage.root=${dataDirectory}/content
    ecp.content.storage.storageId=1

    ecp.keystore.location=/var/lib/ecp-endpoint/keystore.jks
    ecp.keystore.password=password

    ecp.authKeystore.location=/var/lib/ecp-endpoint/authKeystore.jks
    ecp.authKeystore.password=password

    ## HA Configuration ##
    # Set and uncomment these keys to complete HA setup
    # Database
    ecp.db.url=jdbc:postgresql://ecp-db-cluster-rw.cloudnative-pg.svc.cluster.local:5432/ep1
    ecp.db.username=ep1
    ecp.db.password=password
    spring.datasource.validation-query=select 1
    spring.datasource.driver-class-name=org.postgresql.Driver
    # Internal broker
    internalBroker.urls=amqps://eccosp-eccosp-artemis-artemis-eptb1-svc:5672

    # Make the internal broker listen on all interfaces
    internalBroker.host=eccosp-eccosp-artemis-artemis-eptb1-svc
    internalBroker.amqp.port=5672

    # AMQPS authentication
    internalBroker.useAuthentication=true
    internalBroker.auth.user=endpoint
    internalBroker.auth.password=password
    internalBroker.keystore.location=${dataDirectory}/authKeystore.jks
    internalBroker.keystore.password=password
    internalBroker.keystore.authAlias=ecp_module_auth

    # Log file location
    # Both relative and absolute paths are supported

    logging.file.name=/var/log/ecp-endpoint/ecp.log
    logging.file.path=/var/log/ecp-endpoint

    logging.config=/etc/ecp-endpoint/ecp-logback.xml
    logging.level.org.apache.qpid=WARN

    # Health Actuator Parameters
    spring.activemq.user=${internalBroker.auth.user}
    spring.activemq.password=${internalBroker.auth.password}

    ## Disabled JMX protocol for internal broker
    #NOTE: warning when enabled the property then will be accessible JMX remote on port 1099
    spring.jmx.enabled=false
    server.error.whitelabel.enabled=false
    
    # enable AMQP API
    ecp.endpoint.amqpApiEnabled=true
    ecp.endpoint.sendHandler[0].beanName=amqpApiSendHandler
    ecp.endpoint.sendHandler[0].typeName=*

    # JKS Password for private keys stored in DB
    ecp.db.keystore.password=password

    ecp.csrf.secret=P9CkNis9r5Pn00RFZwN9oZgi
    
    # JASYPT encryption
    jasypt.encryptor.algorithm=PBEWITHHMACSHA512ANDAES_256
    management.endpoints.web.exposure.include=info,health,readiness
    management.endpoint.health.show-details=ALWAYS


    ecp.healthExclude=connectedBrokers,waitingToDeliver,waitingToReceive,isReloading,endpointStatus,certificatesStatus,invalidMessagePath,withoutValidMessagePath,synchronizationStatus,internalBrokerConnected

  ecp-users.properties: |-
    ecp.endpoint.users[0].login=admin
    ecp.endpoint.users[0].password=password
    ecp.endpoint.users[0].role=admin
    
    ecp.endpoint.users[1].login=tester
    ecp.endpoint.users[1].password=passwordtester
    ecp.endpoint.users[1].role=user
    

  jmxremote.properties: |-
    ## JMX is disabled for default
    ## bellow is example for JMX settings with SSL
    com.sun.management.jmxremote=false
    #com.sun.management.jmxremote.port=1099
    #com.sun.management.jmxremote.rmi.port=1098
    #com.sun.management.jmxremote.password.file=/path/to/jmxremote.password
    #com.sun.management.jmxremote.access.file=/path/to/jmxremote.access
    #com.sun.management.jmxremote.ssl=false
    #com.sun.management.jmxremote.registry.ssl=true
    #com.sun.management.jmxremote.ssl.config.file=/etc/ecp-endpoint/jmxremote.ssl
    #com.sun.management.jmxremote.authenticate=true

  jmxremote.password: |-

  jmxremote.access: |-

  jmxremote.ssl: |-
    #javax.net.ssl.keyStore=/path/to/keystore.jks
    #javax.net.ssl.keyStorePassword=keystore_password
    #javax.net.ssl.trustStore=/path/to/truststore.jks
    #javax.net.ssl.trustStorePassword=truststore_password

  env.conf: |-
    [Service]
    Environment='CATALINA_HOME=/usr/share/ecp-endpoint'
    Environment='CATALINA_BASE=/usr/share/ecp-endpoint'
    Environment='CATALINA_PID=/usr/share/ecp-endpoint/catalina.pid'
    Environment='CATALINA_OPTS=-Xms128M -Xmx1G\
        -XX:+HeapDumpOnOutOfMemoryError\
        -XX:HeapDumpPath=/var/log/ecp-endpoint/ecp-dump.hprof\
        -Dspring.config.additional-location=/etc/ecp-endpoint/ecp.properties,/etc/ecp-endpoint/ecp-users.properties\
        -Dbroker.internal.auth.settings.location=/etc/ecp-endpoint\
        -Decp.password.location=/etc/ecp-endpoint/ecp-password.properties\
        -Decp.endpoint.jms.directory=/etc/ecp-endpoint/jms\
        -Decp.cluster.manager.localInstanceID=$HOSTNAME\
        -Dcom.sun.management.config.file=/etc/ecp-endpoint/jmxremote.properties'

  setenv.sh: |-
    #!/bin/bash

    ## This file will be copied into tomcat_base/bin/setenv.sh
    ## Setup LOG file location for tomcat
    export CATALINA_OUT=/var/log/ecp-endpoint/catalina.out
    export CATALINA_HOME=/usr/share/ecp-endpoint
    export CATALINA_BASE=/usr/share/ecp-endpoint
    export CATALINA_PID=/usr/share/ecp-endpoint/catalina.pid
    export CATALINA_OPTS="-Xms128M -Xmx1G\
     -XX:+HeapDumpOnOutOfMemoryError\
     -XX:HeapDumpPath=/var/log/ecp-endpoint/ecp-dump.hprof\
     -Dspring.config.additional-location=/etc/ecp-endpoint/ecp.properties,/etc/ecp-endpoint/ecp-users.properties\
     -Dbroker.internal.auth.settings.location=/etc/ecp-endpoint\
     -Decp.password.location=/etc/ecp-endpoint/ecp-password.properties\
     -Decp.endpoint.jms.directory=/etc/ecp-endpoint/jms\
     -Decp.cluster.manager.localInstanceID=$HOSTNAME\
     -Decp.logFullStackTrace=false\
     -Dcom.sun.management.config.file=/etc/ecp-endpoint/jmxremote.properties"

  ecp-logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration>

        <!--http://docs.spring.io/spring-boot/docs/1.2.8.RELEASE/reference/html/howto-logging.html-->
        <!--http://docs.spring.io/spring-boot/docs/1.2.8.RELEASE/reference/html/boot-features-logging.html-->

        <!--Common logger config and log file path-->
        <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
        <property name="AUDIT_LOG_FILE" value="${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/ecp-audit.log"/>
        <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}/}ecp.log}"/>
        <!-- owasp-a1 log message sanitized for CRLF to prevent logger injection -->
        <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS,Etc/GMT} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %replace(%m){'[\r\n]', ''}%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
        <property name="LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE" value="50MB"/>
        <property name="LOGBACK_ROLLINGPOLICY_MAX_HISTORY" value="7"/>
        <property name="LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP" value="70MB"/>


        <!-- ECP Audit Log file appender and logger -->
        <springProfile name="ecp-audit">
            <appender name="EcpAuditAppender"
                      class="ch.qos.logback.core.rolling.RollingFileAppender">
                <encoder>
                    <!-- owasp-a1 log message sanitized for CRLF to prevent logger injection -->
                    <pattern>
                        %d{yyyy-MM-dd HH:mm:ss.SSS,Etc/GMT} %logger{5} - %replace(%msg){'[\r\n]', ''}%n
                    </pattern>
                </encoder>
                <file>${AUDIT_LOG_FILE}</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${AUDIT_LOG_FILE}.%i</fileNamePattern>
                </rollingPolicy>
                <triggeringPolicy
                        class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <MaxFileSize>10MB</MaxFileSize>
                </triggeringPolicy>
            </appender>

            <logger name="EcpAuditLog" level="INFO" additivity="false">
                <appender-ref ref="EcpAuditAppender"/>
            </logger>
        </springProfile>

        <springProfile name="ecp-inmemory">
            <!--Console appender definition-->
            <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

            <root level="INFO">
                <appender-ref ref="CONSOLE"/>
            </root>
        </springProfile>

        <springProfile name="!ecp-inmemory">
            <!--Show hibernate errors only - resolving err msg for warnings takes too much time-->
            <logger name="org.hibernate" level="ERROR"/>

            <!--File appender definition-->
            <include resource="org/springframework/boot/logging/logback/file-appender.xml"/>

            <springProfile name="console-logging">
                <!--Console appender definition-->
              <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

              <root level="INFO">
                  <appender-ref ref="FILE"/>
                  <appender-ref ref="CONSOLE"/>
              </root>
          </springProfile>

          <springProfile name="!console-logging">
              <root level="INFO">
                  <appender-ref ref="FILE"/>
              </root>
          </springProfile>
      </springProfile>
    </configuration>

  server.xml: |-
    <?xml version='1.0' encoding='utf-8'?>
    <!--
      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements.  See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to You under the Apache License, Version 2.0
      (the "License"); you may not use this file except in compliance with
      the License.  You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    -->
    <!-- Note:  A "Server" is not itself a "Container", so you may not
         define subcomponents such as "Valves" at this level.
         Documentation at /docs/config/server.html
     -->
    <Server port="8005" shutdown="SHUTDOWN">
        <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
        <!-- Security listener. Documentation at /docs/config/listeners.html
        <Listener className="org.apache.catalina.security.SecurityListener" />
        -->
        <!--APR library loader. Documentation at /docs/apr.html -->
        <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
        <!-- Prevent memory leaks due to use of particular java/javax APIs-->
        <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
        <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
        <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

        <!-- Global JNDI resources
             Documentation at /docs/jndi-resources-howto.html
        -->
        <GlobalNamingResources>
            <!-- Editable user database that can also be used by
                 UserDatabaseRealm to authenticate users
            -->
            <Resource name="UserDatabase" auth="Container"
                      type="org.apache.catalina.UserDatabase"
                      description="User database that can be updated and saved"
                      factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
                      pathname="conf/tomcat-users.xml" />
        </GlobalNamingResources>

        <!-- A "Service" is a collection of one or more "Connectors" that share
             a single "Container" Note:  A "Service" is not itself a "Container",
             so you may not define subcomponents such as "Valves" at this level.
             Documentation at /docs/config/service.html
         -->
        <Service name="Catalina">

            <!--The connectors can use a shared executor, you can define one or more named thread pools-->
            <!--
            <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
                maxThreads="150" minSpareThreads="4"/>
            -->


            <!-- A "Connector" represents an endpoint by which requests are received
                 and responses are returned. Documentation at :
                 Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
                 Java AJP  Connector: /docs/config/ajp.html
                 APR (HTTP/AJP) Connector: /docs/apr.html
                 Define a non-SSL/TLS HTTP/1.1 Connector on port 8080
            -->
            <!--
            <Connector port="8080" protocol="HTTP/1.1"
                       connectionTimeout="20000"
                       redirectPort="8443" />
            -->
            <!-- A "Connector" using the shared thread pool-->
            <!-- Define a SSL/TLS HTTP/1.1 Connector on port 8443
                 This connector uses the NIO implementation that requires the JSSE
                 style configuration. When using the APR/native implementation, the
                 OpenSSL style configuration is required as described in the APR/native
                 documentation -->

            <Connector port="8443" protocol="eu.entsoe.ecp.connector.protocol.EcpHttp11NioProtocol"
                       sslImplementationName="org.apache.tomcat.util.net.jsse.JSSEImplementation"
                       maxThreads="150" SSLEnabled="true" maxParameterCount="1000" >
            <UpgradeProtocol className="org.apache.coyote.http2.Http2Protocol" />

            <SSLHostConfig protocols="TLSv1.3" ciphers="TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256" >
              <Certificate certificateKeystoreFile="/var/lib/ecp-endpoint/authKeystore.jks" certificateKeystorePassword="password" type="RSA" />
            </SSLHostConfig>

            </Connector>

            <!-- Define an AJP 1.3 Connector on port 8009
            <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />-->


            <!-- An Engine represents the entry point (within Catalina) that processes
                 every request.  The Engine implementation for Tomcat stand alone
                 analyzes the HTTP headers included with the request, and passes them
                 on to the appropriate Host (virtual host).
                 Documentation at /docs/config/engine.html -->

            <!-- You should set jvmRoute to support load-balancing via AJP ie :
            <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
            -->
            <Engine name="Catalina" defaultHost="localhost">

                <!--For clustering, please take a look at documentation at:
                    /docs/cluster-howto.html  (simple how to)
                    /docs/config/cluster.html (reference documentation) -->
                <!--
                <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
                -->

                <!-- Use the LockOutRealm to prevent attempts to guess user passwords
                     via a brute-force attack -->
                <Realm className="org.apache.catalina.realm.LockOutRealm">
                    <!-- This Realm uses the UserDatabase configured in the global JNDI
                         resources under the key "UserDatabase".  Any edits
                         that are performed against this UserDatabase are immediately
                         available for use by the Realm.  -->
                    <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                           resourceName="UserDatabase"/>
                </Realm>

                <Host name="localhost"  appBase="webapps"
                      unpackWARs="true" autoDeploy="true">

                    <!-- SingleSignOn valve, share authentication between web applications
                         Documentation at: /docs/config/valve.html -->
                    <!--
                    <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
                    -->

                    <Valve className="org.apache.catalina.valves.RemoteIpValve" internalProxies="" />
                    <!-- Access log processes all example.
                         Documentation at: /docs/config/valve.html
                         Note: The pattern used is equivalent to using pattern="common" -->
                    <Valve className="eu.entsoe.ecp.valve.EcpAccessLogValve" directory="/var/log/ecp-endpoint"
                           prefix="localhost_access_log" suffix=".txt" rotatable="false"
                           pattern="%h %l %u %t &quot;%r&quot; %s %b" />
                    <Valve className="org.apache.catalina.valves.ErrorReportValve" showReport="false" showServerInfo="false"/>

                </Host>
            </Engine>
        </Service>
    </Server>
  ecp-password.properties: |-

  users.properties: |-
    endpoint=password

  groups.properties: |-
    admins=endpoint
    tempDestinationAdmins=endpoint
    users=endpoint

  
  bootstrap.xml: |-
    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <!--
      ~ Licensed to the Apache Software Foundation (ASF) under one or more
      ~ contributor license agreements. See the NOTICE file distributed with
      ~ this work for additional information regarding copyright ownership.
      ~ The ASF licenses this file to You under the Apache License, Version 2.0
      ~ (the "License"); you may not use this file except in compliance with
      ~ the License. You may obtain a copy of the License at
      ~
      ~     http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~ Unless required by applicable law or agreed to in writing, software
      ~ distributed under the License is distributed on an "AS IS" BASIS,
      ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~ See the License for the specific language governing permissions and
      ~ limitations under the License.
      -->
    
    <broker xmlns="http://activemq.apache.org/schema">
    
       <jaas-security domain="activemq"/>
    
       <!-- artemis.URI.instance is parsed from artemis.instance by the CLI startup.
            This is to avoid situations where you could have spaces or special characters on this URI -->
       <server configuration="file:/opt/eccosp-artemis/etc/broker.xml"/>
    
       <!-- The web server is only bound to localhost by default -->
       <web path="web" rootRedirectLocation="console">
           <binding name="artemis" uri="http://localhost:8161">
               <app name="branding" url="activemq-branding" war="activemq-branding.war"/>
               <app name="plugin" url="artemis-plugin" war="artemis-plugin.war"/>
               <app name="console" url="console" war="console.war"/>
               <app url="metrics" war="metrics.war"/>
           </binding>
       </web>
    </broker>
---
# Source: ecco-sp/charts/eccosp-artemis/templates/statefulset.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-storage-eccosp-artemis-artemis-eptb1-claim
spec:
  storageClassName: longhorn-nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
# Source: ecco-sp/charts/eccosp-artemis/templates/statefulset.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-storage-eccosp-artemis-journal-artemis-eptb1-claim
spec:
  storageClassName: longhorn-nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
# Source: ecco-sp/charts/eccosp-artemis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: eccosp-eccosp-artemis-artemis-eptb1-svc
  labels:
    backup.component.name: artemis
    app: eccosp-eccosp-artemis-artemis-eptb1
spec:
  type: LoadBalancer
  ports:
    - name: https
      port: 8161
      protocol: TCP
    - name: amqps
      port: 5672
      protocol: TCP

  selector:
    app: eccosp-eccosp-artemis-artemis-eptb1
---
# Source: ecco-sp/charts/eccosp-artemis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: eccosp-eccosp-artemis-artemis-eptb1-headless-svc
  labels:
    backup.component.name: artemis
    app: eccosp-eccosp-artemis-artemis-eptb1
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app: eccosp-eccosp-artemis-artemis-eptb1
  ports:
    - protocol: TCP
      port: 61616
      targetPort: 61616
---
# Source: ecco-sp/charts/ecp-endpoint/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: eccosp-ecp-endpoint-ep1-svc
  labels:
    backup.component.name: artemis
    app: eccosp-ecp-endpoint-ep1
spec:
  type: 
  ports:
    - name: https
      port: 8443
      protocol: TCP
    - name: amqps
      port: 5671
      protocol: TCP

  selector:
    app: eccosp-ecp-endpoint-ep1
---
# Source: ecco-sp/charts/eccosp-artemis/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eccosp-eccosp-artemis-artemis-eptb1
  annotations:
    checksum/config: 838388df4c299f6adae62cd7450774a5315fb083a6bb2b52ca6db8423f576408
  labels:
    app: eccosp-eccosp-artemis-artemis-eptb1
spec:
  serviceName: eccosp-eccosp-artemis-artemis-eptb1-headless-svc
  replicas: 3
  selector:
    matchLabels:
      app: eccosp-eccosp-artemis-artemis-eptb1
  template:
    metadata:
      annotations:
        checksum/config: 838388df4c299f6adae62cd7450774a5315fb083a6bb2b52ca6db8423f576408
      labels:
        app: eccosp-eccosp-artemis-artemis-eptb1
        
    spec:

      securityContext:
        fsGroup: 2030

      initContainers:
        - name: ensure-persistent-volume-sync-with-image-data
          image: "usyentsoe/eccosp-artemis:4.14.0.2026"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
            - cp -Rn /opt/eccosp-artemis/etc/* /tmp/eccosp-artemis-dir/;
          volumeMounts:
          - name: data
            mountPath: "/tmp/eccosp-artemis-dir"
        - name: pgsql-data-permission-fix-and-livenessprobe-script
          image: "busybox"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
            - /bin/chmod 777 -R /data;
              chown 2030:2030 -R /data;
              /bin/chmod 777 -R /logs;
              chown 2030:2030 -R /logs;

          volumeMounts:
          - name: data
            mountPath: /data
          - name: logs
            mountPath: /logs
        - name: artemis-ha-configuration-update
          image: "busybox"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "/tmp/configure-cluster.sh"]
          volumeMounts:
          - name: config
            subPath: configure-cluster.sh
            mountPath: /tmp/configure-cluster.sh
          - name: config
            subPath: broker-master.xml
            mountPath: /tmp/broker-master.xml
          - name: config
            subPath: broker-slave.xml
            mountPath: /tmp/broker-slave.xml
          - name: data
            mountPath: /opt/eccosp-artemis/etc/
      containers:
        - name: artemis
          image: "usyentsoe/eccosp-artemis:4.14.0.2026"
          imagePullPolicy: IfNotPresent
          readinessProbe:
            tcpSocket:
              port: 5672
            initialDelaySeconds: 120
            periodSeconds: 60
          securityContext:
            runAsUser: 2030
            runAsGroup: 2030
          ports:
            - name: https
              containerPort: 8161
              protocol: TCP
            - name: amqps
              containerPort: 5672
              protocol: TCP

          volumeMounts:
            - name: config
              subPath: artemis-users.properties
              mountPath: /opt/eccosp-artemis/etc/artemis-users.properties
            - name: config
              subPath: artemis-roles.properties
              mountPath: /opt/eccosp-artemis/etc/artemis-roles.properties
            - name: config
              subPath: artemis.profile
              mountPath: /opt/eccosp-artemis/etc/artemis.profile
            - name: config
              subPath: log4j2.properties
              mountPath: /opt/eccosp-artemis/etc/log4j2.properties
            - name: config
              subPath: jolokia-access.xml
              mountPath: /opt/eccosp-artemis/etc/jolokia-access.xml
            - name: config
              subPath: bootstrap.xml
              mountPath: /opt/eccosp-artemis/etc/bootstrap.xml
            - name: config
              subPath: broker-master.xml
              mountPath: /tmp/broker-master.xml
            - name: config
              subPath: broker-slave.xml
              mountPath: /tmp/broker-slave.xml
            
            - name: journal
              mountPath: /opt/eccosp-artemis/data/
            - name: data
              mountPath: /opt/eccosp-artemis/etc/
            - name: logs
              mountPath: /opt/eccosp-artemis/log
          resources:
            requests:
              cpu: 500m # Minimum CPU allocation for pod
              memory: 512Mi # Minimum memory allocation for pod
            limits:
              cpu: 1000m # Maximum CPU limit for pod
              memory: 1Gi # Maximum memory limit for pod

      volumes:
        - name: config
          configMap:
            name: eccosp-eccosp-artemis-artemis-eptb1-cm
        - name: data
          persistentVolumeClaim:
            claimName: shared-storage-eccosp-artemis-artemis-eptb1-claim
        - name: etc
          emptyDir: {}
        - name: journal
          persistentVolumeClaim:
            claimName: shared-storage-eccosp-artemis-journal-artemis-eptb1-claim
  volumeClaimTemplates:
  - metadata:
      name: logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 256Mi
---
# Source: ecco-sp/charts/ecp-endpoint/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eccosp-ecp-endpoint-ep1
  annotations:
        checksum/config: 9a66de26084db00aaf70929597ac189a3f3d35c1cb086a42d4cb7575019b29e0
  labels:
    app: eccosp-ecp-endpoint-ep1
spec:
  serviceName: eccosp-ecp-endpoint-ep1
  replicas: 3
  selector:
    matchLabels:
      app: eccosp-ecp-endpoint-ep1
  template:
    metadata:
      annotations:
        checksum/config: 9a66de26084db00aaf70929597ac189a3f3d35c1cb086a42d4cb7575019b29e0
      labels:
        app: eccosp-ecp-endpoint-ep1
    spec:

      securityContext:
        fsGroup: 2000

      initContainers:
        - name: ensure-persistent-volume-sync-with-image-data
          image: "usyentsoe/ecp-endpoint:4.14.0.2026"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
            - cp -Rn /var/lib/ecp-endpoint/* /tmp/ecp-endpoint-dir/
          volumeMounts:
          - name: data
            mountPath: "/tmp/ecp-endpoint-dir"
        - name: pgsql-data-permission-fix-and-livenessprobe-script
          image: "busybox"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
            - /bin/chmod 777 -R /data;
              /bin/chmod 400 -R /config;
              /bin/chmod 777 -R /logs;
          volumeMounts:
          - name: data
            mountPath: /data
          - name: logs
            mountPath: /logs
        - name: postgres-readiness-check
          image: "bitnami/postgresql:15"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash","-c" ]
          args: 
            - export DB_PORT=$(echo "jdbc:postgresql://ecp-db-cluster-rw.cloudnative-pg.svc.cluster.local:5432/ep1" | awk '{n=split($0,x,":"); print x[n]}' | awk -F "/" '{print $1}' );
              dbs=$(echo ecp-db-cluster-rw.cloudnative-pg.svc.cluster.local | tr "," "\n");
              while true; do
              for db in $dbs; do
              export DB_KNOWN=$(PGPASSWORD=password psql -h $db -p $DB_PORT -U ep1 -lqt | cut -d \| -f 1 | grep -w ep1 | wc -l);
              if [ $DB_KNOWN -eq 1 ]; then break 2; fi
              done;
              echo waiting for database;
              sleep 2;
              done

      containers:
        - name: artemis
          image: "usyentsoe/ecp-endpoint:4.14.0.2026"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: amqps
              containerPort: 5671
              protocol: TCP

          volumeMounts:
            - name: config
              subPath: ecp.properties
              mountPath: /etc/ecp-endpoint/ecp.properties
            - name: config
              subPath: ecp-users.properties
              mountPath: /etc/ecp-endpoint/ecp-users.properties
            - name: data
              mountPath: /var/lib/ecp-endpoint
            - name: logs
              mountPath: /var/log/ecp-endpoint
            - name: config
              subPath: ecp-logback.xml
              mountPath: /etc/ecp-endpoint/ecp-logback.xml
            - name: config
              subPath: server.xml
              mountPath: /usr/share/ecp-endpoint/conf/server.xml
            - name: config
              subPath: ecp-password.properties
              mountPath: /etc/ecp-endpoint/ecp-password.properties
            - name: config
              subPath: env.conf
              mountPath: /etc/systemd/system/ecp-endpoint.service.d/env.conf
            - name: config
              subPath: setenv.sh
              mountPath: /usr/share/ecp-endpoint/bin/setenv.sh
            - name: config
              subPath: users.properties
              mountPath: /etc/ecp-endpoint/users.properties
            - name: config
              subPath: groups.properties
              mountPath: /etc/ecp-endpoint/groups.properties
            -
              mountPath: /etc/ecp-endpoint/jms/ssl-jks/bootstrap.xml
              name: config
              subPath: bootstrap.xml
          resources:
            requests:
              cpu: 500m # Minimum CPU allocation for pod
              memory: 512Mi # Minimum memory allocation for pod
            limits:
              cpu: 1000m # Maximum CPU limit for pod
              memory: 1Gi # Maximum memory limit for pod

      volumes:
        - name: config
          configMap:
            name: eccosp-ecp-endpoint-ep1-cm

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 256Mi
---
# Source: ecco-sp/charts/eccosp-artemis/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eccosp-eccosp-artemis-artemis-eptb1-ingress
  labels:
    backup.component.name: artemis
    app: eccosp-eccosp-artemis-artemis-eptb1
    app-svc: Helm
  annotations:
    kubernetes.io/ingressClassName: cilium
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  tls:
    - hosts:
        - artemis.koval.top
      secretName: tls-koval-top
  rules:
  - host: artemis.koval.top
    http:
      paths:
      - backend:
          service:
            name: eccosp-eccosp-artemis-artemis-eptb1-svc
            port:
              number: 8161
        pathType: Prefix
        path: /
---
# Source: ecco-sp/charts/ecp-endpoint/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eccosp-ecp-endpoint-ep1-ingress
  labels:
    backup.component.name: artemis
    app: eccosp-ecp-endpoint-ep1
    app-svc: Helm
  annotations:
    kubernetes.io/ingressClassName: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  tls:
    - hosts:
        - ecp.koval.top
      secretName: tls-koval-top
  rules:
  - host: ecp.koval.top
    http:
      paths:
      - backend:
          service:
            name: eccosp-ecp-endpoint-ep1-svc
            port:
              number: 8443
        pathType: Prefix
        path: /
