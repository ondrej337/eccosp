# The commented parameters have default values but these defaults can be overridden when enabled
# All available configuration parameters are described in values file values-ecp-endpoint-ep1.yaml

ecp-endpoint:
  enabled: true
  instance:
    - name: ep-sc
      image:
        name: entsoe/ecp-endpoint
        tag: 4.12.0
        # pullPolicy: IfNotPresent
      replicaCount: 1
      resourcesK8s:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 1512Mi
      storageData: 1Gi
      storageLogs: 256Mi
      keepLogsAfterRestart: true
      livenessProbe: false
      readinessProbe: true

      service:
        https:
          port: 8443
        amqps:
          port: 5671
      ingress:
        enabled: true
        apiVersion: networking.k8s.io/v1
        contextPath: / # context path for ingress, default value '/'
        host: ecp-endpoint.ep-sc.eccosp
        tls: # section for TLS definition for HTTPS connection to ingress
          secretName: tls-secret  # secret where TLS certificate is stored
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
      ecpProperties:
        springProfilesActive: ecp-nonha
        dataDirectory: /var/lib/ecp-endpoint
        ecpKeystoreLocation: /var/lib/ecp-endpoint/keystore.jks
        ecpKeystorePassword: password
        ecpAuthKeystoreLocation: /var/lib/ecp-endpoint/authKeystore.jks
        ecpAuthKeystorePassword: password

        internalBrokerHost: 0.0.0.0
        internalBrokerAmqpPort: 5671
        internalBrokerUseAuthentication: true
        internalBrokerAuthUser: endpoint
        internalBrokerAuthPassword: password
        internalBrokerKeystoreLocation: /var/lib/ecp-endpoint/authKeystore.jks
        internalBrokerKeystorePassword: password
        internalBrokerKeystoreAuthAlias: ecp_module_auth
        internalBrokerUrls: amqps://eccosp-ecp-endpoint-ep-sc-svc:5671

        loggingFileName: /var/log/ecp-endpoint/ecp.log
        loggingFilePath: /var/log/ecp-endpoint
        loggingConfig: /etc/ecp-endpoint/ecp-logback.xml
        loggingLevelOrgApacheQpid: DEBUG

        springJmxEnabled: false
        serverErrorWhiteLabelEnabled: true

        ecpDBKeystorePassword: password

        ecpEndpointAmqpApiEnabled: true
        ecpEndpointAmqpApiSendHandlerEnabled: true
        sendHandlerBeanName: amqpApiSendHandler
        sendHandlertypeName: "*"

        ecpNatEnabled: false

        ecpSecurityProxyEnabled: false

      envConf:
        resourcesJvm:
          xms: 128M
          xmx: 1G

      ecpUsersProperties:
        ecpEndpointUsers:
          - login: admin
            password: password
            role: admin
          - login: tester
            password: passwordtester
            role: user

      volumeMounts:
        - name: config
          subPath: activemq-nonha.xml
          mountPath: /etc/ecp-endpoint/jms/activemq-nonha.xml

      configMap:
        - subPath: activemq-nonha.xml
          content: |-
            <?xml version="1.0" encoding="UTF-8"?>

            <!-- TEST --> 
            
            <!--
            This configures an embedded ActiveMQ internal broker with a kahaBD (file) persistent store. This store can be used
            for non-HA deployments and for HA deployments with shared file system.
            -->

            <beans xmlns="http://www.springframework.org/schema/beans"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

                <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
                    <property name="ignoreUnresolvablePlaceholders" value="false"/>
                </bean>

                <!-- This creates an embedded ActiveMQ Broker -->
                <broker xmlns="http://activemq.apache.org/schema/core" brokerName="internal" useJmx="${spring.jmx.enabled:false}"
                        persistent="true" startAsync="true" schedulerSupport="false" dataDirectory="${dataDirectory}/internalBroker">

                    <destinationPolicy>
                        <policyMap>
                            <policyEntries>
                                <policyEntry queue=">" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.outbox" producerFlowControl="true" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.internal.outbox" producerFlowControl="true" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.inbox" producerFlowControl="false" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.inbox.*" producerFlowControl="false" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.download" producerFlowControl="false" memoryLimit="150 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.archive" producerFlowControl="false" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.upload.*" producerFlowControl="false" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry queue="ecp.endpoint.handler.*" producerFlowControl="false" memoryLimit="100 mb" maxPageSize="10" advisoryForConsumed="true" />
                                <policyEntry topic=">" producerFlowControl="false"/>
                            </policyEntries>
                        </policyMap>
                    </destinationPolicy>

                    <systemUsage>
                        <systemUsage>
                            <memoryUsage>
                                <!-- in-memory buffer for messages -->
                                <memoryUsage limit="400 mb" />
                            </memoryUsage>
                            <storeUsage>
                                <!-- storage buffer for messages -->
                                <storeUsage percentLimit="50"/>
                            </storeUsage>
                            <tempUsage>
                                <tempUsage percentLimit="10" />
                            </tempUsage>
                        </systemUsage>
                    </systemUsage>

                    <persistenceAdapter>
                        <kahaDB directory="${dataDirectory}/internalBroker/data" checksumJournalFiles="true" checkForCorruptJournalFiles="true"/>
                    </persistenceAdapter>

                    <transportConnectors>
                        <transportConnector name="amqp" uri="amqp://${internalBroker.host:127.0.0.1}:${internalBroker.amqp.port:5671}#{'${internalBroker.parameters:}' != '' ? '?${internalBroker.parameters:}' : ''}"/>
                    </transportConnectors>

                    <plugins>
                        <bean xmlns="http://www.springframework.org/schema/beans" id="loggingPlugin" class="eu.entsoe.ecp.endpoint.broker.internal.InternalBrokerLoggingPlugin"/>
                    </plugins>
                </broker>

            </beans>

# global config
global:
  storage:
    class: standard
  imagePullSecrets:
    - name: regcred